{"ast":null,"code":"var _jsxFileName = \"/home/thepast/todo-app/src/Components/ListTasks.js\",\n    _s = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState } from \"react\";\nimport FilterComp from \"./FilterComp.js\";\nimport TodoItem from \"./TodoItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTasks = props => {\n  _s();\n\n  //List of Tasks Component\n  const checkfilter = x => {\n    if (filterTodo === 0) return;\n    if (filterTodo === 1) return x === 0;\n    if (filterTodo === 2) return x === 1;\n  };\n\n  const [filterTodo, setFilterTodo] = useState(0);\n\n  let disp = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Hello, Let's Start Sorting your Schedule\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 14\n  }, this);\n\n  if (Object.keys(props.liTask).length !== 0) {\n    disp = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: Object.keys(props.liTask).map(key => {\n        return checkfilter(props.liTask[key][1]) && /*#__PURE__*/_jsxDEV(TodoItem, {\n          liTask: props.liTask,\n          setTask: props.setTask,\n          uId: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FilterComp, {\n      setFilterTodo: setFilterTodo,\n      filterTodo: filterTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), disp]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTasks, \"AluatNTKnkjLDqx8d9hT14rvwp0=\");\n\n_c = ListTasks;\nexport default ListTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTasks\");","map":{"version":3,"sources":["/home/thepast/todo-app/src/Components/ListTasks.js"],"names":["React","useState","FilterComp","TodoItem","ListTasks","props","checkfilter","x","filterTodo","setFilterTodo","disp","Object","keys","liTask","length","map","key","setTask"],"mappings":";;;AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B;AAEA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,UAAU,KAAK,CAAnB,EAAsB;AACtB,QAAIA,UAAU,KAAK,CAAnB,EAAsB,OAAOD,CAAC,KAAK,CAAb;AACtB,QAAIC,UAAU,KAAK,CAAnB,EAAsB,OAAOD,CAAC,KAAK,CAAb;AACvB,GAJD;;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;;AACA,MAAIS,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;;AAEA,MAAIC,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACQ,MAAlB,EAA0BC,MAA1B,KAAqC,CAAzC,EAA4C;AAC1CJ,IAAAA,IAAI,gBACF,QAAC,KAAD,CAAO,QAAP;AAAA,gBACGC,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACQ,MAAlB,EAA0BE,GAA1B,CAA+BC,GAAD,IAAS;AACtC,eACEV,WAAW,CAACD,KAAK,CAACQ,MAAN,CAAaG,GAAb,EAAkB,CAAlB,CAAD,CAAX,iBACE,QAAC,QAAD;AACE,UAAA,MAAM,EAAEX,KAAK,CAACQ,MADhB;AAEE,UAAA,OAAO,EAAER,KAAK,CAACY,OAFjB;AAIE,UAAA,GAAG,EAAED;AAJP,WAGOA,GAHP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAUD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,aAAa,EAAEP,aAA3B;AAA0C,MAAA,UAAU,EAAED;AAAtD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArCD;;GAAMN,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState } from \"react\";\nimport FilterComp from \"./FilterComp.js\";\nimport TodoItem from \"./TodoItem.js\";\n\nconst ListTasks = (props) => {\n  //List of Tasks Component\n\n  const checkfilter = (x) => {\n    if (filterTodo === 0) return;\n    if (filterTodo === 1) return x === 0;\n    if (filterTodo === 2) return x === 1;\n  };\n\n  const [filterTodo, setFilterTodo] = useState(0);\n  let disp = <p>Hello, Let's Start Sorting your Schedule</p>;\n\n  if (Object.keys(props.liTask).length !== 0) {\n    disp = (\n      <React.Fragment>\n        {Object.keys(props.liTask).map((key) => {\n          return (\n            checkfilter(props.liTask[key][1]) && (\n              <TodoItem\n                liTask={props.liTask}\n                setTask={props.setTask}\n                key={key}\n                uId={key}\n              />\n            )\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <FilterComp setFilterTodo={setFilterTodo} filterTodo={filterTodo} />\n      {disp}\n    </React.Fragment>\n  );\n};\nexport default ListTasks;\n"]},"metadata":{},"sourceType":"module"}